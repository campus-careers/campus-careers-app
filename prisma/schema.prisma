generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Interview {
  id        Int      @id @default(autoincrement())
  date      DateTime
  company   String
  notes     String?
  studentId Int
  student   User     @relation(fields: [studentId], references: [id])
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  role       Role        @default(USER)
  name       String
  location   Locations
  skills     SkillEntry[] // Many-to-many relationship with skills
  interests  String[]
  image      String      @default("default-image.jpg")
  major      String?
  portfolio  String?
  companies  Company[]
  interviews Interview[]
}

model Company {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  location   Locations
  salary     Int
  overview   String
  jobs       String
  contacts   String
  idealSkill SkillEntry[] // Many-to-many relationship with skills
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
}

model SkillEntry {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Location {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Student {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  skills     String[]
  image      String
  location   String
  companies  String[]
  interviews String[]
  interests  String[]
  major      String?
  portfolio  String?
}

model AdminList {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String
  skills     SkillEntry[] // Many-to-many relationship with skills
  location   Locations
  interests  String[]
  image      String
  interviews String[]
  companies  String[]
}

model Filter {
  id        Int       @id @default(autoincrement())
  skills    SkillEntry[] // Many-to-many relationship with skills
  locations Locations
}

enum Role {
  USER
  ADMIN
}

enum Condition {
  excellent
  good
  fair
  poor
}

enum Skill {
  JavaScript
  Python
  Java
  CSharp
  Ruby
  CPlusPlus
  Design
  HTML
  CSS
  SQL
  R
  PHP
  Perl
  Scala
  MATLAB
  Dart
  Elixir
  Shell
  Assembly
  ObjectiveC
}

enum Locations {
  Alabama
  Alaska
  Arizona
  Arkansas
  California
  Colorado
  Connecticut
  Delaware
  Florida
  Georgia
  Hawaii
  Idaho
  Illinois
  Indiana
  Iowa
  Kansas
  Kentucky
  Louisiana
  Maine
  Maryland
  Massachusetts
  Michigan
  Minnesota
  Mississippi
  Missouri
  Montana
  Nebraska
  Nevada
  NewHampshire
  NewJersey
  NewMexico
  NewYork
  NorthCarolina
  NorthDakota
  Ohio
  Oklahoma
  Oregon
  Pennsylvania
  RhodeIsland
  SouthCarolina
  SouthDakota
  Tennessee
  Texas
  Utah
  Vermont
  Virginia
  Washington
  WestVirginia
  Wisconsin
  Wyoming
  Remote
}